<%-- 
Name:
Author: 
Description: 
--%>
<%@ Template Language="C#" TargetLanguage="c#"  Debug="True" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="基本信息" Description="Table that the object is based on." %>
<%@ Property Name="ClassNamespace" Type="System.String" Category="基本信息" Default="TAF.Web" Description="" %>
<%@ Property Name="Description" Type="System.String" Category="基本信息" Default="商品" Description="" %>
<%@ Assembly Name="System.ComponentModel"  %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="TAF.Utility"  Path="d:\WorkStation\TAF\TAF.Utility\bin\Release"%>
<%@ Assembly Name="TAF.Business"  Path="d:\WorkStation\TAF\TAF.Business\bin\Release"%>
<%@ Assembly Name="TAF.MVC"  Path="d:\WorkStation\TAF\TAF.Web.Core\bin\Release"%>
<%@ Assembly Src="Common.cs" %>
<%@ Import Namespace="TAF" %>  
<%@ Import Namespace="TAF.Utility" %>  
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="SchemaMapper" %>
<%@ Import Namespace="System" %> 
<%@ Import Namespace="System.Linq" %> 
<%@ Import Namespace="System.Reflection" %> 
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Map Name="SqlCSharp" Src="Sql-CSharp" Description="System to C# Type Map" %>
<%@ Map Name="DbDataReader" Src="DbType-DataReaderMethod" Description="DbType to DataReader Method Map" %>
<%@ Map Name="SqlNativeSqlDb" Src="SqlNativeType-SqlDbType" Description="SqlNativeType to SqlDbType Map" %>
<%@ Map Name="DbTypeCSharp" Src="DbType-CSharp" Description="DbType to CSharp Map" %>

@using TAF.MVC
@using TAF.Utility
@using <%=ClassNamespace%>.Models
@using <%=ClassNamespace%>.Views
@model  List<Tuple<Guid,string,string>>
<div class="row" id="main">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header bordered-bottom bordered-primary">
                <span class="widget-caption"><%=Description%>管理</span>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">
                    <add-button title="新增"></add-button>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <table class="table table-striped table-hover table-bordered ">
                            <thead>
                                <tr role="row">
                                    <%foreach(var item in SourceTable.NonPrimaryKeyColumns.Where(r=>!Common.IsSystemProperty(r)).ToList()){ %>
                                    <th>
                                        <%=item.Name %>
                                    </th>            
                                    <%} %>
                                    <th>
                                        操作
                                    </th>
                                </tr>
                            <tr role="row">
                                <%foreach(var item in SourceTable.NonPrimaryKeyColumns.Where(r=>!Common.IsSystemProperty(r)).ToList()){ %>                                
                                <%if(ColumnIsGuid(item)){%>
                                <th style="width: 120px">
                                    <select id="query<%=item.Name%>" style="width: 100%" v-model="queryEntity.<%=Extensions.ToCamel(item.Name)%>">
                                        <option value="">请选择...</option>
                                        @{
                                            foreach (var item in Model)
                                            {
                                                <option value="@item.Item1">@item.Item3</option>
                                            }
                                        }
                                    </select>
                                </th>
                                <%}else if(ColumnIsDateTime(item)){%>
                                <th style="width: 220px">
                                        <span class="input-icon icon-right">
                                            <input type="text" class="form-control" id="query<%=item.Name%>" placeholder="<%=item.Name%>" readonly="readonly" />
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                </th>
                                <%}else if(ColumnIsNumber(item)){%>
                                <th>
                                    <div class="spinbox spinbox-horizontal spinbox-right" id="query<%=item.Name%>">
                                        <div class="spinbox-buttons	btn-group">
                                            <button type="button" class="btn spinbox-down blueberry">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                            <button type="button" class="btn spinbox-up purple">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="spinbox-input form-control " placeholder="<%=item.Name%>"  v-model="queryEntity.<%=Extensions.ToCamel(item.Name)%>"/>
                                    </div>
                                </th>
                                <%}else{%>
                                <th>
                                    <input type="text" class="form-control" placeholder="<%=item.Name%>" v-model="queryEntity.<%=Extensions.ToCamel(item.Name)%>" />
                                </th>
                                    <%} %>                                                
                                <%} %>
                                <th style="width: 170px;"><search-command></search-command></th>
                            </tr>
                            </thead>
                            <tbody>
                                <tr v-for=" it in list.Datas">
                                <%foreach(var item in SourceTable.NonPrimaryKeyColumns.Where(r=>!Common.IsSystemProperty(r)).ToList()){ %>
                                    <td>{{it.<%=Common.RemoveLaseId(item.Name)%>}}</td>        
                                <%} %>
                                    <td>
                                        <row-command :id="it.Id" title="编辑" :name="it.Name"></row-command>
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot is="table-foot" colspan="<%=SourceTable.NonPrimaryKeyColumns.Where(r=>!Common.IsSystemProperty(r)).Count()+1%>"></tfoot>
                        </table>
                    </div>
                </div>
                <form-edit></form-edit>
                <dialog-delete delete-url="/<%=Common.GetClassName(SourceTable)%>/Delete/"></dialog-delete>
            </div>
        </div>
    </div>
</div>
<template id="<%=Extensions.ToCamel(Common.GetClassName(SourceTable))%>FormBody">
    <form id="form" class="form-horizontal " name="form">
    <%foreach(var item in SourceTable.NonPrimaryKeyColumns.Where(r=>!Common.IsSystemProperty(r)).ToList()){ %>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label class="col-sm-2 control-label no-padding-right"><%=item.Name%></label>
                    <div class="col-sm-10">
                    <%if(ColumnIsGuid(item)){%>
                        <select id="<%=Extensions.ToCamel(item.Name)%>" name="<%=Extensions.ToCamel(item.Name)%>" style="width: 100%" v-model="item.<%=Extensions.ToCamel(item.Name)%>">
                            <option value="">请选择...</option>
                            @{
                                foreach (var item in Model)
                                {
                                    <option value="@item.Item1">@item.Item3</option>
                                }
                            }
                        </select>
                    <%}else if(ColumnIsDateTime(item)){%>
                        <div class="input-group" style="width: 100%">
                            <span class="input-icon icon-right">
                                <input type="text" class="form-control" id="<%=Extensions.ToCamel(item.Name)%>" name="<%=Extensions.ToCamel(item.Name)%>" placeholder="<%=item.Name%>" readonly="readonly" v-model="item.<%=item.Name%>" />
                                <i class=" fa fa-calendar"></i>
                            </span>
                        </div>
                    <%}else if(ColumnIsNumber(item)){%>
                        <div class="spinbox spinbox-horizontal spinbox-right" id="item<%=item.Name%>">
                            <div class="spinbox-buttons	btn-group">
                                <button type="button" class="btn spinbox-down blueberry">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn spinbox-up purple">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                                <input type="text" class="spinbox-input form-control "  placeholder="<%=item.Name%>" name="<%=Extensions.ToCamel(item.Name)%>" v-model="item.<%=item.Name%>" />
                        </div>
                    <%}else{ %>
                        <span class="input-icon icon-right">
                            <input type="text" class="form-control " placeholder="<%=item.Name%>" name="<%=Extensions.ToCamel(item.Name)%>" v-model="item.<%=item.Name%>" />
                        </span>
                    <%} %>
                    </div>
                </div>
            </div>
        </div>
        <%}%>
    </form>
</template>
<script src="~/Scripts/<%=Extensions.ToCamel(Common.GetClassName(SourceTable))%>.js"></script>




<script runat="template">

    /// <summary>
    /// 获取C#类型
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    private  string GetCSharpVariableType(ColumnSchema column)
    {
        if (column.Name.EndsWith("TypeCode")) return column.Name;
        return DbTypeCSharp[column.DataType.ToString()];
    }


    /// <summary>
    /// 列是否是Guid
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    public  bool ColumnIsGuid(ColumnSchema column)
    {
       string type= GetCSharpVariableType(column) ;
        return type.StartsWith("Guid") ;
    }

    /// <summary>
    /// 列是否是数字
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    private bool ColumnIsNumber(ColumnSchema column)
    {
       string type= GetCSharpVariableType(column) ;
        return type=="int" ||type=="double"||type=="decimal";
    }
    
    /// <summary>
    /// 列是否是日期
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    private bool ColumnIsDateTime(ColumnSchema column)
    {
       string type= GetCSharpVariableType(column) ;
        Debug.Write(type=="DateTime");
        return type.StartsWith("DateTime") ;
    }
    
    /// <summary>
    /// 列是否是Guid
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    private bool ColumnContainsGuid(TableSchema table)
    {
        var result=false;
       foreach (var column in table.Columns)
       {
           if(ColumnIsGuid(column))result=true;
       }
       return result;
    }
    
    /// <summary>
    /// 获取查询字符串
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    public  string GetQueryFunc()
    {
       var funStr="";
       foreach(var item in SourceTable.Columns.Where(r=>!Common.IsSystemProperty(r))){
           if(ColumnIsGuid(item)){
               if(!item.AllowDBNull){
                   funStr+="\t\t\t && "+"(query."+item.Name+"==new Guid()||query."+item.Name+"== r."+item.Name+")\r\n" ;
               }else{
                  funStr+="\t\t\t && "+"(!query."+item.Name+".HasValue||query."+item.Name+" ==new Guid()||query."+item.Name+"== r."+item.Name+")\r\n" ; 
               }               
           }else if(ColumnIsNumber(item)){
               funStr+="\t\t\t && "+" (query."+item.Name+"==0|| r."+item.Name+"== query."+item.Name+")\r\n";
           }else if(ColumnIsDateTime(item)){
               funStr+="\t\t\t && "+"((query."+item.Name+"From==query."+item.Name+"To && query."+item.Name+"To== DateTime.Today)\r\n" ; 
               funStr+="\t\t\t || "+"(query."+item.Name+"From==new DateTime(1, 1, 1) || query."+item.Name+"From<= r."+item.Name+")\r\n" ; 
               funStr+="\t\t\t && "+"(query."+item.Name+"To==new DateTime(1, 1, 1) || query."+item.Name+"To>= r."+item.Name+"))\r\n" ; 
           } else {
               funStr+="\t\t\t && "+"(string.IsNullOrWhiteSpace(query."+item.Name+")||(!string.IsNullOrWhiteSpace(query."+item.Name+") && r."+item.Name+".Contains(query."+item.Name+".ToStr())))\r\n";
           }
       }
       funStr=funStr.ReplaceFirst("\t\t\t &&","").ReplaceLast("\r\n",";");
       return funStr;
    }

</script>