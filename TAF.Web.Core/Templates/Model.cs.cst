<%-- 
Name:
Author: 
Description: 
--%>
<%@ Template Language="C#" TargetLanguage="c#"  Debug="True" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="基本信息" Description="Table that the object is based on." %>
<%@ Property Name="ClassNamespace" Type="System.String" Category="基本信息" Default="TAF.Web" Description="" %>
<%@ Property Name="Description" Type="System.String" Category="基本信息" Default="商品" Description="" %>
<%@ Assembly Name="System.ComponentModel"  %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="TAF.Utility"  Path="d:\WorkStation\TAF\TAF.Utility\bin\Release"%>
<%@ Assembly Name="TAF.Business"  Path="d:\WorkStation\TAF\TAF.Business\bin\Release"%>

<%@ Assembly Src="Common.cs" %>
<%@ Import Namespace="TAF.Utility" %>  
<%@ Import Namespace="TAF" %>  
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="SchemaMapper" %>
<%@ Import Namespace="System" %> 
<%@ Import Namespace="System.Reflection" %> 
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="TAF.Utility" %>
<%@ Map Name="SqlCSharp" Src="Sql-CSharp" Description="System to C# Type Map" %>
<%@ Map Name="DbDataReader" Src="DbType-DataReaderMethod" Description="DbType to DataReader Method Map" %>
<%@ Map Name="SqlNativeSqlDb" Src="SqlNativeType-SqlDbType" Description="SqlNativeType to SqlDbType Map" %>
<%@ Map Name="DbTypeCSharp" Src="DbType-CSharp" Description="DbType to CSharp Map" %>

// --------------------------------------------------------------------------------------------------------------------
// <copyright file="<%=Common.GetClassName(SourceTable)%>.cs" author="何翔华">
//   
// </copyright>
// <summary>
//   <%=Description%>
// </summary>
// --------------------------------------------------------------------------------------------------------------------

namespace <%=ClassNamespace %>.Models
{
    using TAF;
    using TAF.Utility;

    /// <summary>
    /// <%=Description%>
    /// </summary>
    public class <%=Common.GetClassName(SourceTable)%> : EfBusiness<<%=Common.GetClassName(SourceTable)%>>
    {
        public <%=Common.GetClassName(SourceTable)%>()
        {
        }

        public <%=Common.GetClassName(SourceTable)%>(Guid id) : base(id) { }
        
        #region 属性
        <% for (int i = 0; i < SourceTable.NonPrimaryKeyColumns.Count; i++) { %>
        <%  ColumnSchema  column=SourceTable.NonPrimaryKeyColumns[i];%>
        <% if(!Common.IsSystemProperty(column) ) {%>
        private <%=GetCSharpVariableType(column)%> <%=column.Name.ToCamel()%>;

        <% }} %>

        <% for (int i = 0; i < SourceTable.NonPrimaryKeyColumns.Count; i++) { %>
        <%  ColumnSchema  column=SourceTable.NonPrimaryKeyColumns[i];%>
        <% if(!Common.IsSystemProperty(column) ) {%>
        public string <%=column.Name%>
        {
            get
            {
                return this.<%=column.Name.ToCamel()%>;
            }

            set
            {
                SetProperty(ref this.<%=column.Name.ToCamel()%>, value);
            }
        }
        
        <% }} %>
        #endregion
                
        #region 覆写基类方法

        protected override void AddDescriptions()
        {
            base.AddDescriptions();
            <% for (int i = 0; i < SourceTable.NonPrimaryKeyColumns.Count; i++) { %>
                <%  ColumnSchema  column=SourceTable.NonPrimaryKeyColumns[i];%>
                <% if(!Common.IsSystemProperty(column) ) {%>
            AddDescription(nameof(<%=column.Name%>) + <%=column.Name%>.ToStr());
            <% }} %>
        }
        #endregion
    }
}




<script runat="template">

    /// <summary>
    /// 获取C#类型
    /// </summary>
    /// <param name="column"></param>
    /// <returns></returns>
    private  string GetCSharpVariableType(ColumnSchema column)
    {
        if (column.Name.EndsWith("TypeCode")) return column.Name;
        return DbTypeCSharp[column.DataType.ToString()];
    }

</script>